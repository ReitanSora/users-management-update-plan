name: deploy-workflow.yml
on:
  push:
    branches: [ master ]

jobs:
  build:
    name: Build container image and push to Docker Hub
    runs-on: ubuntu-latest
    env:
      GHCR_OWNER: reitansora
      IMAGE_NAME: users-management-update-plan

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ghcr.io/${{ env.GHCR_OWNER }}/${{ env.IMAGE_NAME }}:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    env:
      EC2_SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
      EC2_HOST:            ${{ secrets.EC2_PUBLIC_DNS }}
      EC2_USER:            ubuntu
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Ensure /home/ubuntu/app exists and is writable
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_USER }}
          key: ${{ env.EC2_SSH_PRIVATE_KEY }}
          script: |
            sudo mkdir -p /home/ubuntu/app/nginx
            sudo chown -R ubuntu:ubuntu /home/ubuntu/app

      - name: Copy compose & nginx config to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_USER }}
          key: ${{ env.EC2_SSH_PRIVATE_KEY }}
          source: "deploy/docker-compose.yml,deploy/nginx.conf"
          target: "/home/ubuntu/app/"
          strip_components: 1

      - name: Run deployment commands on EC2
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_USER }}
          key: ${{ env.EC2_SSH_PRIVATE_KEY }}
          script: |
            sudo rm -rf /home/ubuntu/app/nginx
            sudo mkdir -p /home/ubuntu/app/nginx
            sudo mv /home/ubuntu/app/nginx.conf /home/ubuntu/app/nginx/nginx.conf
            
            sudo cat > /home/ubuntu/app/.env <<EOF
            DB_URL=${{ secrets.DB_URL }}
            SECRET_KEY=${{ secrets.SECRET_KEY }}
            EOF

            cd /home/ubuntu/app
            sudo docker compose down || true
            sudo docker compose pull
            sudo docker compose up -d --force-recreate --remove-orphans